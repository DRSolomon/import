<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="cache_type.static" type="constant">TechDivision\Import\Utils\CacheTypes::TYPE_STATIC</parameter>
        <parameter key="cache_type.configurable" type="constant">TechDivision\Import\Utils\CacheTypes::TYPE_CONFIGURABLE</parameter>
    </parameters>

    <services>

        <service id="configuration.import.plugin.archive" synthetic="true" />
        <service id="configuration.import.plugin.subject" synthetic="true" />
        <service id="configuration.import.plugin.global.data" synthetic="true" />
        <service id="configuration.import.plugin.missing.option.values" synthetic="true" />
        <service id="configuration.import.subject.move.files" synthetic="true" />

        <service id="import.generator.core.config.data.uid" class="TechDivision\Import\Utils\Generators\CoreConfigDataUidGenerator"/>

        <service id="import.util.cache.key" class="TechDivision\Import\Utils\CacheKeyUtil">
            <argument type="service" id="configuration"/>
        </service>
        <service id="import.util.primary.key" class="TechDivision\Import\Utils\PrimaryKeyUtil">
            <argument type="service" id="configuration"/>
        </service>

        <!--
         | The DI cache configuration
         |-->

        <service id="import.cache.pool.factory.array" class="TechDivision\Import\Connection\ArrayCachePoolFactory"/>
        <service id="import.cache.pool.array" class="Cache\Adapter\PHPArray\ArrayCachePool">
            <factory service="import.cache.pool.factory.array" method="createCachePool"/>
        </service>
        <service id="import.cache.adapter.generic" class="TechDivision\Import\Cache\GenericCacheAdapter">
            <argument type="service" id="import.cache.pool.array"/>
            <argument type="service" id="import.util.cache.key"/>
            <argument type="service" id="configuration"/>
        </service>
        <service id="import.cache.adapter.static" class="TechDivision\Import\Cache\ConfigurableCacheAdapter">
            <argument type="service" id="import.cache.adapter.generic"/>
            <argument type="service" id="configuration"/>
            <argument>%cache_type.static%</argument>
        </service>
        <service id="import.cache.adapter.configurable" class="TechDivision\Import\Cache\ConfigurableCacheAdapter">
            <argument type="service" id="import.cache.adapter.generic"/>
            <argument type="service" id="configuration"/>
            <argument>%cache_type.configurable%</argument>
        </service>
        <service id="import.repository.cache.warmer.eav.attribute.option.value" class="TechDivision\Import\Repositories\CacheWarmer\EavAttributeOptionValueCacheWarmer">
            <argument type="service" id="import.repository.eav.attribute.option.value"/>
        </service>
        <!-- service id="import.cache.pool.prefixed.array" class="Cache\Prefixed\PrefixedCachePool">
            <factory service="import.cache.pool.factory.prefixed" method="createCachePool"/>
        </service>
        <service id="import.cache.pool.factory.prefixed" class="TechDivision\Import\Connection\PrefixedCachePoolFactory">
            <argument type="service" id="configuration"/>
            <argument type="service" id="import.cache.pool.factory.array"/>
        </service>
        <service id="import.cache.pool.factory.namespaced" class="TechDivision\Import\Connection\NamespacedCachePoolFactory">
            <argument type="service" id="configuration"/>
            <argument type="service" id="import.cache.pool.factory.array"/>
        </service -->

        <!--
         | The default DI aliases
         |-->

        <service id="cache.static" alias="import.cache.adapter.static"/>
        <service id="cache.configurable" alias="import.cache.adapter.configurable"/>

        <!--
         | The repository configuration
         |-->

        <service id="import.repository.sql.statement" class="TechDivision\Import\Repositories\SqlStatementRepository"/>
        <service id="import.repository.eav.attribute.option.value" class="TechDivision\Import\Repositories\EavAttributeOptionValueRepository">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
            <argument type="service" id="cache.configurable"/>
        </service>
        <service id="import.repository.category" class="TechDivision\Import\Repositories\CategoryRepository">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.repository.category.varchar" class="TechDivision\Import\Repositories\CategoryVarcharRepository">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.repository.eav.attribute" class="TechDivision\Import\Repositories\EavAttributeRepository">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.repository.eav.attribute" class="TechDivision\Import\Repositories\EavAttributeRepository">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.repository.eav.attribute.set" class="TechDivision\Import\Repositories\EavAttributeSetRepository">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.repository.eav.attribute.group" class="TechDivision\Import\Repositories\EavAttributeGroupRepository">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.repository.eav.entity.type" class="TechDivision\Import\Repositories\EavEntityTypeRepository">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.repository.store" class="TechDivision\Import\Repositories\StoreRepository">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.repository.store.website" class="TechDivision\Import\Repositories\StoreWebsiteRepository">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.repository.tax.class" class="TechDivision\Import\Repositories\TaxClassRepository">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.repository.link.type" class="TechDivision\Import\Repositories\LinkTypeRepository">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.repository.link.attribute" class="TechDivision\Import\Repositories\LinkAttributeRepository">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.repository.url.rewrite" class="TechDivision\Import\Repositories\UrlRewriteRepository">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.repository.core.config.data" class="TechDivision\Import\Repositories\CoreConfigDataRepository">
            <argument type="service" id="import.generator.core.config.data.uid"/>
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.repository.image.type" class="TechDivision\Import\Repositories\ImageTypeRepository">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.repository.customer.group" class="TechDivision\Import\Repositories\CustomerGroupRepository">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>

        <service id="import.action.processor.url.rewrite.product.create" class="TechDivision\Import\Actions\Processors\UrlRewriteCreateProcessor">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.action.processor.url.rewrite.product.update" class="TechDivision\Import\Actions\Processors\UrlRewriteUpdateProcessor">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.action.processor.url.rewrite.product.delete" class="TechDivision\Import\Actions\Processors\UrlRewriteDeleteProcessor">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.action.processor.store.create" class="TechDivision\Import\Actions\Processors\StoreCreateProcessor">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.action.processor.store.update" class="TechDivision\Import\Actions\Processors\StoreUpdateProcessor">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.action.processor.store.group.create" class="TechDivision\Import\Actions\Processors\StoreGroupCreateProcessor">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.action.processor.store.group.update" class="TechDivision\Import\Actions\Processors\StoreGroupUpdateProcessor">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.action.processor.store.website.create" class="TechDivision\Import\Actions\Processors\StoreWebsiteCreateProcessor">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>
        <service id="import.action.processor.store.website.update" class="TechDivision\Import\Actions\Processors\StoreWebsiteUpdateProcessor">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.repository.sql.statement"/>
        </service>

        <service id="import.action.url.rewrite" class="TechDivision\Import\Actions\GenericIdentifierAction">
            <argument type="service" id="import.action.processor.url.rewrite.product.create"/>
            <argument type="service" id="import.action.processor.url.rewrite.product.update"/>
            <argument type="service" id="import.action.processor.url.rewrite.product.delete"/>
        </service>
        <service id="import.action.store" class="TechDivision\Import\Actions\GenericIdentifierAction">
            <argument type="service" id="import.action.processor.store.create"/>
            <argument type="service" id="import.action.processor.store.update"/>
        </service>
        <service id="import.action.store.group" class="TechDivision\Import\Actions\GenericIdentifierAction">
            <argument type="service" id="import.action.processor.store.group.create"/>
            <argument type="service" id="import.action.processor.store.group.update"/>
        </service>
        <service id="import.action.store.website" class="TechDivision\Import\Actions\GenericIdentifierAction">
            <argument type="service" id="import.action.processor.store.website.create"/>
            <argument type="service" id="import.action.processor.store.website.update"/>
        </service>

        <service id="import.assembler.category" class="TechDivision\Import\Assembler\CategoryAssembler">
            <argument type="service" id="import.repository.category"/>
            <argument type="service" id="import.repository.category.varchar"/>
        </service>

        <service id="import.processor.registry" class="TechDivision\Import\Services\RegistryProcessor">
            <argument type="service" id="cache.static"/>
        </service>
        <service id="import.processor.import" class="TechDivision\Import\Services\ImportProcessor">
            <argument type="service" id="connection"/>
            <argument type="service" id="import.assembler.category"/>
            <argument type="service" id="import.repository.category"/>
            <argument type="service" id="import.repository.category.varchar"/>
            <argument type="service" id="import.repository.eav.attribute"/>
            <argument type="service" id="import.repository.eav.attribute.set"/>
            <argument type="service" id="import.repository.eav.attribute.group"/>
            <argument type="service" id="import.repository.eav.entity.type"/>
            <argument type="service" id="import.repository.store"/>
            <argument type="service" id="import.repository.store.website"/>
            <argument type="service" id="import.repository.tax.class"/>
            <argument type="service" id="import.repository.link.type"/>
            <argument type="service" id="import.repository.link.attribute"/>
            <argument type="service" id="import.repository.core.config.data"/>
            <argument type="service" id="import.repository.customer.group"/>
            <argument type="service" id="import.action.store"/>
            <argument type="service" id="import.action.store.group"/>
            <argument type="service" id="import.action.store.website"/>
            <argument type="service" id="import.repository.image.type"/>
        </service>

        <!--
         | The DI configuration for the file resolvers and their factories
         |-->
        <service id="import.subject.file.resolver.factory" class="TechDivision\Import\Subjects\FileResolver\FileResolverFactory">
            <argument type="service" id="service_container"/>
        </service>
        <service id="import.subject.file.resolver.simple" class="TechDivision\Import\Subjects\FileResolver\SimpleFileResolver">
            <argument type="service" id="import_app_simple.simple"/>
            <argument type="service" id="import.processor.registry"/>
        </service>

        <!--
         | The DI configuration for the number converters and their factories
         |-->
        <service id="import.subject.number.converter.factory" class="TechDivision\Import\Subjects\I18n\NumberConverterFactory">
            <argument type="service" id="service_container"/>
        </service>
        <service id="import.subject.number.converter.simple" class="TechDivision\Import\Subjects\I18n\SimpleNumberConverter">
            <argument type="service" id="import_app_simple.simple"/>
            <argument type="service" id="import.processor.registry"/>
        </service>

        <!--
         | The DI configuration for the date converters and their factories
         |-->
        <service id="import.subject.date.converter.factory" class="TechDivision\Import\Subjects\I18n\DateConverterFactory">
            <argument type="service" id="service_container"/>
        </service>
        <service id="import.subject.date.converter.simple" class="TechDivision\Import\Subjects\I18n\SimpleDateConverter">
            <argument type="service" id="import_app_simple.simple"/>
            <argument type="service" id="import.processor.registry"/>
        </service>

        <!--
         | The DI configuration for the subject factory
         |-->
        <service id="import.subject.factory" class="TechDivision\Import\Subjects\SubjectFactory">
            <argument type="service" id="service_container"/>
            <argument type="service" id="loggers"/>
            <argument type="service" id="import.subject.number.converter.factory"/>
            <argument type="service" id="import.subject.date.converter.factory"/>
        </service>

        <!--
         | The DI configuration for the plugin factory
         |-->
        <service id="import.plugin.factory" class="TechDivision\Import\Plugins\PluginFactory">
            <argument type="service" id="service_container"/>
        </service>

        <!--
         | The DI configuration for the plugins
         |-->
        <service id="import.plugin.subject.executor" class="TechDivision\Import\Plugins\SubjectExecutor">
            <argument type="service" id="import.visitor.callback"/>
            <argument type="service" id="import.visitor.observer"/>
            <argument type="service" id="import.subject.factory"/>
            <argument type="service" id="import.events.emitter"/>
        </service>
        <service id="import.plugin.archive" class="TechDivision\Import\Plugins\ArchivePlugin">
            <argument type="service" id="import_app_simple.simple"/>
        </service>
        <service id="import.plugin.subject" class="TechDivision\Import\Plugins\SubjectPlugin">
            <argument type="service" id="import_app_simple.simple"/>
            <argument type="service" id="import.plugin.subject.executor"/>
            <argument type="service" id="import.subject.file.resolver.factory"/>
        </service>
        <service id="import.plugin.global.data" class="TechDivision\Import\Plugins\GlobalDataPlugin">
            <argument type="service" id="import_app_simple.simple"/>
        </service>
        <service id="import.plugin.cache.warmer" class="TechDivision\Import\Plugins\CacheWarmerPlugin">
            <argument type="service" id="import_app_simple.simple"/>
        </service>
        <service id="import.plugin.missing.option.values" class="TechDivision\Import\Plugins\MissingOptionValuesPlugin">
            <argument type="service" id="import_app_simple.simple"/>
            <argument type="service" id="import.adapter.export.csv"/>
        </service>

        <!--
         | The DI configuration for the import adapter
         |-->
        <service id="import.adapter.interpreter" class="TechDivision\Import\Adapter\Goodby\Interpreter"/>
        <service id="import.adapter.lexer.config.factory" class="TechDivision\Import\Adapter\Csv\LexerConfigFactory">
            <argument type="service" id="configuration"/>
        </service>
        <service id="import.adapter.lexer.config" class="Goodby\CSV\Import\Standard\LexerConfig">
            <factory service="import.adapter.lexer.config.factory" method="createLexerConfig"/>
        </service>
        <service id="import.adapter.lexer" class="TechDivision\Import\Adapter\Goodby\Lexer">
            <argument type="service" id="import.adapter.lexer.config"/>
        </service>
        <service id="import.adapter.import.csv" class="TechDivision\Import\Adapter\CsvImportAdapter">
            <argument type="service" id="import.adapter.lexer"/>
            <argument type="service" id="import.adapter.interpreter"/>
        </service>
        <service id="import.adapter.import.csv.factory" class="TechDivision\Import\Adapter\CsvImportAdapterFactory">
            <argument type="service" id="service_container"/>
        </service>

        <!--
         | The DI configuration for the export adapter
         |-->
        <service id="import.adapter.export.config.factory" class="TechDivision\Import\Adapter\Csv\ExportConfigFactory">
            <argument type="service" id="configuration"/>
        </service>
        <service id="import.adapter.export.config" class="Goodby\CSV\Export\Standard\ExportConfig">
            <factory service="import.adapter.export.config.factory" method="createExportConfig"/>
        </service>
        <service id="import.adapter.export" class="TechDivision\Import\Adapter\Goodby\Exporter">
            <argument type="service" id="import.adapter.export.config"/>
        </service>
        <service id="import.adapter.export.csv" class="TechDivision\Import\Adapter\CsvExportAdapter">
            <argument type="service" id="import.adapter.export"/>
        </service>
        <service id="import.adapter.export.csv.factory" class="TechDivision\Import\Adapter\CsvExportAdapterFactory">
            <argument type="service" id="service_container"/>
        </service>

        <!--
         | The DI configuration for the filesystem adapter
         |-->
        <service id="import.adapter.filesystem.factory.php" class="TechDivision\Import\Adapter\PhpFilesystemAdapterFactory"/>
        <service id="import.adapter.filesystem.factory.league" class="TechDivision\Import\Adapter\LeagueFilesystemAdapterFactory"/>

        <!--
         | The DI configuration for the subjects provided by this library
         |-->
        <service id="import.subject.move.files" class="TechDivision\Import\Subjects\MoveFilesSubject" shared="false">
            <argument type="service" id="import.processor.registry"/>
            <argument type="service" id="import.generator.core.config.data.uid"/>
            <argument type="service" id="loggers"/>
            <argument type="service" id="import.events.emitter"/>
        </service>

        <service id="import.observer.attribute.set" class="TechDivision\Import\Observers\AttributeSetObserver"/>
        <service id="import.observer.dynamic.attribute.loader" class="TechDivision\Import\Observers\DynamicAttributeLoader"/>
        <service id="import.observer.additional.attribute" class="TechDivision\Import\Observers\AdditionalAttributeObserver"/>

        <service id="import.visitor.callback" class="TechDivision\Import\Callbacks\CallbackVisitor">
            <argument type="service" id="service_container"/>
        </service>
        <service id="import.visitor.observer" class="TechDivision\Import\Observers\ObserverVisitor">
            <argument type="service" id="service_container"/>
        </service>

        <!-- 
         ! The DI configuration for the event emitter/listeners 
         !-->
        <service id="import.events.emitter.factory" class="TechDivision\Import\Events\EmitterFactory">
            <argument type="service" id="configuration"/>
            <argument type="service" id="service_container"/>
        </service>
        <service id="import.events.emitter" class="League\Event\Emitter">
            <factory service="import.events.emitter.factory" method="createEmitter"/>
        </service>

        <!-- 
         ! The DI configuration for the value/additional attribute serializers 
         !-->
        <service id="import.serializer.csv.value" class="TechDivision\Import\Serializers\ValueCsvSerializer"/>
        <service id="import.serializer.csv.additional.attribute" class="TechDivision\Import\Serializers\AdditionalAttributeCsvSerializer">
            <argument type="service" id="import.serializer.factory.csv.value"/>
        </service>
        <service id="import.serializer.factory.csv.value" class="TechDivision\Import\Serializers\ValueCsvSerializerFactory">
            <argument type="service" id="service_container"/>
        </service>
        <service id="import.serializer.factory.csv.additional.attribute" class="TechDivision\Import\Serializers\AdditionalAttributeCsvSerializerFactory">
            <argument type="service" id="service_container"/>
        </service>

        <!-- 
         ! The DI configuration for the listeners
         !-->
        <service id="import.listener.clear.registry" class="TechDivision\Import\Listeners\ClearRegistryListener">
            <argument type="service" id="import.processor.registry"/>
        </service>
        <service id="import.listener.initialize.registry" class="TechDivision\Import\Listeners\InitializeRegistryListener">
            <argument type="service" id="configuration"/>
            <argument type="service" id="import.processor.registry"/>
        </service>
        <service id="import.listener.render.ansi.art" class="TechDivision\Import\Listeners\RenderAnsiArtListener">
            <argument type="service" id="configuration"/>
        </service>

    </services>

</container>